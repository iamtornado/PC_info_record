services:
  # PostgreSQL 17.6 数据库
  db:
    image: postgres:17.6-alpine
    container_name: pc_info_db
    runtime: runc
    env_file:
      - ../.env
    environment:
      POSTGRES_DB: ${DB_NAME:-pc_info_record}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pc_info_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-pc_info_record}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Django 应用
  web:
    image: tornadoami/pc-info-record:v1.0.0
    container_name: pc_info_web
    runtime: runc
    command: gunicorn pc_info_record.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120 --access-logfile - --error-logfile -
    volumes:
      - staticfiles:/app/staticfiles
      - media:/app/media
    expose:
      - "8000"
    env_file:
      - ../.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DOCKER_CONTAINER=true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pc_info_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8000/admin/')\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: pc_info_nginx
    runtime: runc
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - staticfiles:/app/staticfiles:ro
      - media:/app/media:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - pc_info_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
    driver: local
  staticfiles:
    driver: local
  media:
    driver: local

networks:
  pc_info_network:
    driver: bridge

