# ==============================================================================
# 环境变量配置文件
# ==============================================================================
# 使用说明:
# 1. 复制此文件: cp .env.example .env
# 2. 根据部署环境选择对应的配置（开发/生产）
# 3. 修改所有标记为 "CHANGE_THIS" 或 "your-xxx" 的值
# 4. 确保 .env 文件不要提交到 Git
# ==============================================================================

# ==============================================================================
# Django 核心配置
# ==============================================================================

# SECRET_KEY - Django 密钥（必须修改）
# 生成命令: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-secret-key-here-CHANGE-THIS-TO-RANDOM-50-CHARS

# DEBUG - 调试模式
# 开发环境: DEBUG=True
# 生产环境: DEBUG=False (重要！)
DEBUG=False

# ALLOWED_HOSTS - 允许访问的主机名（逗号分隔，不要有空格）
# 开发环境: localhost,127.0.0.1
# 生产环境: yourdomain.com,www.yourdomain.com,localhost,127.0.0.1,your_server_ip
# 注意: 如果通过 IP 访问，必须包含该 IP 地址
ALLOWED_HOSTS=localhost,127.0.0.1

# ==============================================================================
# 数据库配置 (PostgreSQL)
# ==============================================================================

DB_NAME=pc_info_record
DB_USER=postgres

# 数据库密码（必须修改）
DB_PASSWORD=your-password-CHANGE-THIS

# 数据库主机
# 本地开发: DB_HOST=localhost
# Docker 环境: DB_HOST=db（推荐）
DB_HOST=db

DB_PORT=5432

# ==============================================================================
# LDAP/Active Directory 认证配置
# ==============================================================================

# LDAP 服务器地址
# 示例: ldap://192.168.1.100:389 或 ldaps://ldap.company.com:636
LDAP_SERVER_URI=ldap://your-ldap-server.com:389

# LDAP 服务账号 DN（用于查询 AD）
# 示例: CN=ldap_service,OU=ServiceAccounts,OU=IT,DC=company,DC=com
LDAP_BIND_DN=CN=service_account,OU=ServiceAccounts,DC=example,DC=com

# LDAP 服务账号密码（必须修改）
LDAP_BIND_PASSWORD=your-ldap-password-CHANGE-THIS

# LDAP 用户搜索基准 DN
# 示例: OU=Users,DC=company,DC=com
LDAP_USER_BASE_DN=OU=Users,DC=example,DC=com

# ==============================================================================
# 国际化配置
# ==============================================================================

LANGUAGE_CODE=zh-hans
TIME_ZONE=Asia/Shanghai

# ==============================================================================
# 生产环境安全配置（仅生产环境需要）
# ==============================================================================

# HTTPS 重定向（配置 HTTPS 后设为 True）
# 开发环境: SECURE_SSL_REDIRECT=False
# 生产环境: SECURE_SSL_REDIRECT=True (如果使用 HTTPS)
# SECURE_SSL_REDIRECT=False

# CSRF 信任的源（生产环境必须配置）
# 开发环境: 可不配置
# 生产环境: 添加所有允许访问的域名
# CSRF_TRUSTED_ORIGINS=http://yourdomain.com,https://yourdomain.com

# ==============================================================================
# 可选配置
# ==============================================================================

# CORS 跨域配置（如果需要前后端分离）
# CORS_ALLOWED_ORIGINS=https://frontend.yourdomain.com

# 邮件配置（如果需要发送邮件）
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-email-password

# ==============================================================================
# 配置检查清单
# ==============================================================================
#
# 本地开发环境:
#   [✓] SECRET_KEY - 可以使用简单值
#   [✓] DEBUG=True
#   [✓] DB_PASSWORD - 本地数据库密码
#   [✓] DB_HOST=localhost
#   [✓] LDAP 配置 - 填写实际 LDAP 服务器信息
#
# Docker/生产环境:
#   [!] SECRET_KEY - 必须生成强随机密钥
#   [!] DEBUG=False - 必须关闭
#   [!] DB_PASSWORD - 必须使用强密码
#   [!] DB_HOST=db - Docker 中使用服务名
#   [!] ALLOWED_HOSTS - 添加域名
#   [!] LDAP_BIND_PASSWORD - 实际服务账号密码
#   [!] CSRF_TRUSTED_ORIGINS - 配置信任的域名（如使用）
#   [!] SECURE_SSL_REDIRECT=True - 如果配置了 HTTPS
#
# ==============================================================================
